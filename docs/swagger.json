{
    "swagger": "2.0",
    "info": {
        "title": "FSC Finance App API",
        "description": "API for FSC Finance App that allows users to manage their finances.",
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],

    "paths": {
        "/api/users": {
            "post": {
                "summary": "Create a new user",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User information to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserParams"
                        }
                    }
                ],

                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/InvalidParamsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },

        "/api/users/{userId}/balance": {
            "get": {
                "summary": "Get user balance by user ID",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string",
                        "description": "ID of the user to get balance"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User balance found",
                        "schema": {
                            "$ref": "#/definitions/UserBalance"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{userId}": {
            "get": {
                "summary": "Get user by ID",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string",
                        "description": "ID of the user to get"
                    }
                ],

                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            },

            "delete": {
                "summary": "Delete user by ID",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string",
                        "description": "ID of the user to delete"
                    }
                ],

                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            },

            "patch": {
                "summary": "Update authenticated user",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string",
                        "description": "ID of the user to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserParams"
                        }
                    }
                ],

                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "schema": {
                            "$ref": "#/definitions/InvalidParamsResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "summary": "Get transactions by user ID",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "in": "query",
                        "name": "userId",
                        "required": true,
                        "type": "string",
                        "description": "ID of the user to transactions"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Transaction"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new transaction",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "schema": {
                            "$ref": "#/definitions/InvalidParamsResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions/{transactionId}": {
            "patch": {
                "summary": "Update transaction by ID",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "transactionId",
                        "required": true,
                        "type": "string",
                        "description": "ID of the transaction to update"
                    },
                    {
                        "name": "body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid params",
                        "schema": {
                            "$ref": "#/definitions/InvalidParamsResponse"
                        }
                    },

                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/TransactionNotFoundResponse"
                        }
                    },

                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },

    "definitions": {
        "CreateUserParams": {
            "type": "object",
            "required": ["first_name", "last_name", "email", "password"],
            "properties": {
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "email": {
                    "type": "string",
                    "example": "john@doe.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },

        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "e29ef739-ffae-45a8-a582-fb56f9660a12"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "email": {
                    "type": "string",
                    "example": "john@doe.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },

        "UserBalance": {
            "type": "object",
            "properties": {
                "earnings": {
                    "type": "string",
                    "example": "1000"
                },
                "expenses": {
                    "type": "string",
                    "example": "500"
                },
                "investments": {
                    "type": "string",
                    "example": "1000"
                },
                "balance": {
                    "type": "string",
                    "example": "500"
                }
            }
        },

        "UserNotFoundResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User not found"
                }
            }
        },

        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "e29ef739-ffae-45a8-a582-fb56f9660a12"
                },
                "user_id": {
                    "type": "string",
                    "example": "e29ef739-ffae-45a8-a582-fb56f9660a12"
                },
                "name": {
                    "type": "string",
                    "example": "Salary"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "amount": {
                    "type": "string",
                    "example": "1000"
                }
            }
        },

        "CreateTransactionParams": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "e29ef739-ffae-45a8-a582-fb56f9660a12"
                },
                "name": {
                    "type": "string",
                    "example": "Salary"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "date": {
                    "type": "string",
                    "example": "2023-12-15T17:08:26.189Z",
                    "required": true
                },
                "amount": {
                    "type": "number",
                    "example": "1000"
                }
            }
        },

        "UpdateTransactionParams": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Salary"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "date": {
                    "type": "string",
                    "example": "2023-12-15T17:08:26.189Z",
                    "required": true
                },
                "amount": {
                    "type": "number",
                    "example": "1000"
                }
            }
        },

        "TransactionNotFoundResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Transaction not found"
                }
            }
        },

        "InvalidParamsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid param (this message depends on the param that is invalid)"
                }
            }
        },

        "InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        }
    }
}
